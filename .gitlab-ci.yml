stages:
  - prepare
  - test
  - build
  - publish

default:
  tags:
    - docker
  before_script:
    - sed -i -- "s/\"0.0.0\"/\"$CI_COMMIT_TAG\"/g" package.json
    - sed -i -- "s/\"cytomine-client\"/\"@${CI_PROJECT_ROOT_NAMESPACE}\/cytomine-client\"/g" package.json
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

workflow:
  rules:
    - if: $CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^[~^]?([\dvx*]+(?:[-.](?:[\dx*]+|alpha|beta))*)$/
      variables:
        PUBLISH_PACKAGE: "true"
    - if: $CI_COMMIT_TAG == null || $CI_COMMIT_REF_NAME !~ /^[~^]?([\dvx*]+(?:[-.](?:[\dx*]+|alpha|beta))*)*$/
      variables:
        PUBLISH_PACKAGE: "false"
    - when: always

# TODO tests require a full cytomine instance to run, skip for now
# Jenkins tests used to run against a full cytomine but with with fixed versions of components so it was not ideal
# run-tests:
#   stage: test

build-js-package:
  image: node:14.16.1
  stage: build
  rules:
    - if: $PUBLISH_PACKAGE == "true"
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run build
  artifacts:
    paths:
      - dist/cytomine*

# TODO upload to npm public packaget registry
publish-js-package:
  image: node:14.16.1
  stage: publish
  needs:
    - job: build-js-package
      artifacts: true
  rules:
    - if: $PUBLISH_PACKAGE == "true"
  script:
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}"
      } | tee -a .npmrc
    - npm publish
